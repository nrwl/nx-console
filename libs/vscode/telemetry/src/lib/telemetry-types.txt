// we want to structure telemetry events consistently
// separated by dots, kebab-case
// - include namespaces to group events
// - one event name to describe the event
// - possibly one modifier for things like success, fail, ...
// - payload with additional details for things like source

// MISC
'misc.refresh-workspace';
'misc.add-dependency';
'misc.show-project-configuration'
'misc.show-in-explorer';
'misc.open-pdv';
'misc.open-project-details-codelens';



// CLOUD
'cloud.connect'
'cloud.open-app'

// GRAPH - differentiate between editor actions & interaction events from the graph app?

'graph.show-all'
'graph.show-affected'
'graph.focus' 
  - source: 'command' | 'projects-view' | 'explorer-context-menu'
'graph.task'
  - source: 'command' | 'projects-view' | 'explorer-context-menu'
'graph.select'
'graph.interaction.run-help'
'graph.interaction.open-project-edge-file'
'graph.interaction.open-project-config-file'
'graph.interaction.show-task-graph'
'graph.interaction.show-project-graph'

// TASKS
'tasks.run'
 - source: 'projects-view' |  'explorer-context-menu' | 'command' | 'command-targetfirst' | 'graph-interaction' | 'pdv-interaction' | 'codelens' | 'nx-commands-panel'
 - file: 'project.json' | 'other'
'tasks.copy-to-clipboard'
'tasks.run-many'


// GENERATE
'generate.quickpick';
'generate.ui'
  - source: 'explorer-context-menu' | 'projects-view' | 'command' | 'nx-commands-panel'
'generate.move'
  - source: 'explorer-context-menu' | 'projects-view' | 'command'
'generate.remove'
  - source: 'explorer-context-menu' | 'projects-view' | 'command'

// CLI 
'cli.list'
'cli.migrate'
'cli.affected'
'cli.init'
  - source: 'button' | 'migrate-angular-prompt'
