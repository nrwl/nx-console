{
  "name": "angular-console",
  "displayName": "Nx Console",
  "description": "Nx Console for Visual Studio Code",
  "version": "17.26.0",
  "repository": {
    "type": "git",
    "url": "https://github.com/nrwl/nx-console.git"
  },
  "author": {
    "name": "Narwhal Technologies Inc",
    "email": "hello@nrwl.io"
  },
  "publisher": "nrwl",
  "main": "main.js",
  "icon": "assets/nx-console-logo-large.png",
  "galleryBanner": {
    "color": "#176BCC",
    "theme": "dark"
  },
  "homepage": "https://nx.dev/using-nx/console#nx-console-for-vscode",
  "bugs": {
    "url": "https://github.com/nrwl/nx-console/issues"
  },
  "license": "MIT",
  "engines": {
    "vscode": "^1.71.0"
  },
  "keywords": [
    "angular",
    "react",
    "cli",
    "monorepo",
    "nx",
    "lerna"
  ],
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "dependencies": {
    "jsonc-parser": "^3.0.0",
    "@monodon/typescript-nx-imports-plugin": "0.2.0",
    "@yarnpkg/fslib": "2.6.1-rc.5",
    "@yarnpkg/libzip": "2.2.3-rc.5"
  },
  "contributes": {
    "typescriptServerPlugins": [
      {
        "enableForWorkspaceTypeScriptVersions": true,
        "name": "@monodon/typescript-nx-imports-plugin"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "when": "!isNxWorkspace && isAngularWorkspace && config.nxConsole.enableGenerateFromContextMenu",
          "command": "ng.generate.ui.fileexplorer",
          "group": "2_workspace"
        },
        {
          "when": "!isNxWorkspace && isAngularWorkspace && config.nxConsole.enableGenerateFromContextMenu",
          "command": "ng.run.fileexplorer",
          "group": "2_workspace"
        },
        {
          "when": "isNxWorkspace && config.nxConsole.enableGenerateFromContextMenu",
          "command": "nx.generate.ui.fileexplorer",
          "group": "2_workspace"
        },
        {
          "when": "isNxWorkspace && config.nxConsole.enableGenerateFromContextMenu",
          "command": "nx.run.fileexplorer",
          "group": "2_workspace"
        },
        {
          "when": "isNxWorkspace && config.nxConsole.enableGenerateFromContextMenu",
          "command": "nx.move.fileexplorer",
          "group": "7_modification@-1"
        },
        {
          "when": "isNxWorkspace && config.nxConsole.enableGenerateFromContextMenu",
          "command": "nx.remove.fileexplorer",
          "group": "7_modification@-1"
        },
        {
          "when": "isNxWorkspace && explorerResourceIsFolder && resourcePath in nxAppsDir && config.nxConsole.enableGenerateFromContextMenu && nx.hasApplicationGenerators",
          "command": "nx.generate.ui.app.fileexplorer",
          "group": "2_workspace"
        },
        {
          "when": "isNxWorkspace && explorerResourceIsFolder && resourcePath in nxLibsDir && config.nxConsole.enableGenerateFromContextMenu && nx.hasLibraryGenerators",
          "command": "nx.generate.ui.lib.fileexplorer",
          "group": "2_workspace"
        },
        {
          "when": "isNxWorkspace",
          "group": "2_workspace@5",
          "command": "nx.graph.focus"
        },
        {
          "when": "isNxWorkspace",
          "group": "2_workspace@5",
          "command": "nx.graph.select"
        }
      ],
      "view/title": [
        {
          "command": "nx.graph.showAll",
          "when": "view == nxProjects",
          "group": "navigation@0"
        },
        {
          "command": "nxConsole.refreshWorkspace",
          "when": "view == nxProjects",
          "group": "navigation@1"
        },
        {
          "command": "nxConsole.refreshWorkspace",
          "when": "view == nxRunTarget",
          "group": "navigation"
        },
        {
          "command": "nxConsole.editCommonCommands",
          "when": "view == nxCommands",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "nxConsole.editWorkspaceJson",
          "when": "view == nxProjects && viewItem == project || viewItem == target",
          "group": "inline"
        },
        {
          "command": "nxConsole.revealInExplorer",
          "when": "view == nxProjects && viewItem != target",
          "group": "inline"
        },
        {
          "command": "nxConsole.runTask",
          "when": "view == nxProjects && viewItem == target",
          "group": "inline"
        },
        {
          "command": "nx.graph.focus.button",
          "when": "view == nxProjects && viewItem == project && isNxWorkspace",
          "group": "inline@1"
        },
        {
          "command": "nx.graph.select.button",
          "when": "view == nxProjects && viewItem == project && isNxWorkspace",
          "group": "inline@1"
        },
        {
          "command": "nxConsole.connectToNxCloud",
          "when": "view == nxHelpAndFeedback && viewItem == connectToNxCloud && isNxWorkspace",
          "group": "inline"
        }
      ],
      "commandPalette": [
        {
          "command": "ng.generate.ui.fileexplorer",
          "when": "false"
        },
        {
          "command": "nx.generate.ui.fileexplorer",
          "when": "false"
        },
        {
          "command": "nx.generate.ui.app.fileexplorer",
          "when": "false"
        },
        {
          "command": "nx.generate.ui.lib.fileexplorer",
          "when": "false"
        },
        {
          "command": "nxConsole.runTask",
          "when": "false"
        },
        {
          "command": "nxConsole.revealInExplorer",
          "when": "false"
        },
        {
          "command": "nx.generate.ui.app",
          "when": "isNxWorkspace && nx.hasApplicationGenerators"
        },
        {
          "command": "nx.generate.ui.lib",
          "when": "isNxWorkspace && nx.hasLibraryGenerators"
        },
        {
          "command": "nxConsole.makeNgFaster",
          "when": "isAngularWorkspace"
        },
        {
          "command": "ng.run.target",
          "when": "isAngularWorkspace"
        },
        {
          "command": "ng.lint",
          "when": "isAngularWorkspace"
        },
        {
          "command": "ng.build",
          "when": "isAngularWorkspace"
        },
        {
          "command": "ng.e2e",
          "when": "isAngularWorkspace"
        },
        {
          "command": "ng.generate",
          "when": "isAngularWorkspace"
        },
        {
          "command": "ng.serve",
          "when": "isAngularWorkspace"
        },
        {
          "command": "ng.test",
          "when": "isAngularWorkspace"
        },
        {
          "command": "ng.run",
          "when": "isAngularWorkspace"
        },
        {
          "command": "ng.lint.ui",
          "when": "isAngularWorkspace"
        },
        {
          "command": "ng.build.ui",
          "when": "isAngularWorkspace"
        },
        {
          "command": "ng.e2e.ui",
          "when": "isAngularWorkspace"
        },
        {
          "command": "ng.serve.ui",
          "when": "isAngularWorkspace"
        },
        {
          "command": "ng.test.ui",
          "when": "isAngularWorkspace"
        },
        {
          "command": "ng.xi18n.ui",
          "when": "isAngularWorkspace"
        },
        {
          "command": "ng.generate.ui",
          "when": "isAngularWorkspace"
        },
        {
          "command": "nx.run.target",
          "when": "isNxWorkspace"
        },
        {
          "command": "nx.lint",
          "when": "isNxWorkspace"
        },
        {
          "command": "nx.build",
          "when": "isNxWorkspace"
        },
        {
          "command": "nx.e2e",
          "when": "isNxWorkspace"
        },
        {
          "command": "nx.generate",
          "when": "isNxWorkspace"
        },
        {
          "command": "nx.serve",
          "when": "isNxWorkspace"
        },
        {
          "command": "nx.test",
          "when": "isNxWorkspace"
        },
        {
          "command": "nx.graph.refresh",
          "when": "isNxWorkspace"
        },
        {
          "command": "nx.graph.focus",
          "when": "isNxWorkspace"
        },
        {
          "command": "nx.graph.select",
          "when": "isNxWorkspace"
        },
        {
          "command": "nx.graph.focus.button",
          "when": "false"
        },
        {
          "command": "nx.graph.select.button",
          "when": "false"
        },
        {
          "command": "nx.run-many",
          "when": "isNxWorkspace"
        },
        {
          "command": "nx.run",
          "when": "isNxWorkspace"
        },
        {
          "command": "nx.affected",
          "when": "isNxWorkspace"
        },
        {
          "command": "nx.affected.test",
          "when": "isNxWorkspace"
        },
        {
          "command": "nx.affected.build",
          "when": "isNxWorkspace"
        },
        {
          "command": "nx.affected.e2e",
          "when": "isNxWorkspace"
        },
        {
          "command": "nx.affected.lint",
          "when": "isNxWorkspace"
        },
        {
          "command": "nx.affected.apps",
          "when": "isNxWorkspace"
        },
        {
          "command": "nx.affected.libs",
          "when": "isNxWorkspace"
        },
        {
          "command": "nx.list",
          "when": "isNxWorkspace"
        },
        {
          "command": "nx.migrate",
          "when": "isNxWorkspace"
        },
        {
          "command": "nx.lint.ui",
          "when": "isNxWorkspace"
        },
        {
          "command": "nx.build.ui",
          "when": "isNxWorkspace"
        },
        {
          "command": "nx.e2e.ui",
          "when": "isNxWorkspace"
        },
        {
          "command": "nx.serve.ui",
          "when": "isNxWorkspace"
        },
        {
          "command": "nx.test.ui",
          "when": "isNxWorkspace"
        },
        {
          "command": "nx.xi18n.ui",
          "when": "isNxWorkspace"
        },
        {
          "command": "nx.generate.ui",
          "when": "isNxWorkspace"
        }
      ]
    },
    "commands": [
      {
        "command": "nxConsole.refreshWorkspace",
        "title": "Refresh Workspace",
        "category": "Nx",
        "icon": "$(refresh)"
      },
      {
        "command": "nxConsole.editCommonCommands",
        "title": "Edit Common Commands",
        "icon": "$(pencil)"
      },
      {
        "command": "nxConsole.editWorkspaceJson",
        "title": "Edit workspace definition",
        "icon": "$(go-to-file)"
      },
      {
        "command": "nxConsole.revealInExplorer",
        "title": "Reveal in Explorer",
        "icon": "$(folder)"
      },
      {
        "command": "nxConsole.runTask",
        "title": "Execute task",
        "icon": "$(play)"
      },
      {
        "category": "ng",
        "title": "Run Target",
        "command": "ng.run.target"
      },
      {
        "category": "ng",
        "title": "lint",
        "command": "ng.lint"
      },
      {
        "category": "ng",
        "title": "build",
        "command": "ng.build"
      },
      {
        "category": "ng",
        "title": "e2e",
        "command": "ng.e2e"
      },
      {
        "category": "ng",
        "title": "generate",
        "command": "ng.generate"
      },
      {
        "category": "ng",
        "title": "serve",
        "command": "ng.serve"
      },
      {
        "category": "ng",
        "title": "test",
        "command": "ng.test"
      },
      {
        "category": "ng",
        "title": "run",
        "command": "ng.run"
      },
      {
        "category": "ng",
        "title": "lint (ui)",
        "command": "ng.lint.ui"
      },
      {
        "category": "ng",
        "title": "build (ui)",
        "command": "ng.build.ui"
      },
      {
        "category": "ng",
        "title": "e2e (ui)",
        "command": "ng.e2e.ui"
      },
      {
        "category": "ng",
        "title": "serve (ui)",
        "command": "ng.serve.ui"
      },
      {
        "category": "ng",
        "title": "test (ui)",
        "command": "ng.test.ui"
      },
      {
        "category": "ng",
        "title": "xi18n (ui)",
        "command": "ng.xi18n.ui"
      },
      {
        "category": "ng",
        "title": "generate (ui)",
        "command": "ng.generate.ui"
      },
      {
        "category": "ng",
        "title": "ng generate...",
        "command": "ng.generate.ui.fileexplorer"
      },
      {
        "category": "ng",
        "title": "run target for from selected file",
        "command": "ng.run.fileexplorer"
      },
      {
        "category": "Nx",
        "title": "Run Target",
        "command": "nx.run.target"
      },
      {
        "category": "Nx",
        "title": "lint",
        "command": "nx.lint"
      },
      {
        "category": "Nx",
        "title": "build",
        "command": "nx.build"
      },
      {
        "category": "Nx",
        "title": "e2e",
        "command": "nx.e2e"
      },
      {
        "category": "Nx",
        "title": "generate",
        "command": "nx.generate"
      },
      {
        "category": "Nx",
        "title": "serve",
        "command": "nx.serve"
      },
      {
        "category": "Nx",
        "title": "test",
        "command": "nx.test"
      },
      {
        "category": "Nx",
        "title": "Refresh Nx Graph",
        "command": "nx.graph.refresh"
      },
      {
        "category": "Nx",
        "title": "Focus in Nx Graph",
        "command": "nx.graph.focus"
      },
      {
        "category": "Nx",
        "title": "Select/Deselect in Nx Graph",
        "command": "nx.graph.select"
      },
      {
        "category": "Nx",
        "title": "Focus in Nx Graph",
        "command": "nx.graph.focus.button",
        "icon": "$(target)"
      },
      {
        "category": "Nx",
        "title": "Select/Deselect in Nx Graph",
        "command": "nx.graph.select.button",
        "icon": "$(eye)"
      },
      {
        "category": "Nx",
        "title": "Show full project graph",
        "command": "nx.graph.showAll",
        "icon": "$(source-control)"
      },
      {
        "category": "Nx",
        "title": "run-many",
        "command": "nx.run-many"
      },
      {
        "category": "Nx",
        "title": "run",
        "command": "nx.run"
      },
      {
        "category": "Nx",
        "title": "affected",
        "command": "nx.affected"
      },
      {
        "category": "Nx",
        "title": "affected test",
        "command": "nx.affected.test"
      },
      {
        "category": "Nx",
        "title": "affected build",
        "command": "nx.affected.build"
      },
      {
        "category": "Nx",
        "title": "affected e2e",
        "command": "nx.affected.e2e"
      },
      {
        "category": "Nx",
        "title": "affected lint",
        "command": "nx.affected.lint"
      },
      {
        "category": "Nx",
        "title": "affected apps",
        "command": "nx.affected.apps"
      },
      {
        "category": "Nx",
        "title": "affected libs",
        "command": "nx.affected.libs"
      },
      {
        "category": "Nx",
        "title": "list",
        "command": "nx.list"
      },
      {
        "category": "Nx",
        "title": "migrate",
        "command": "nx.migrate"
      },
      {
        "category": "Nx",
        "title": "lint (ui)",
        "command": "nx.lint.ui"
      },
      {
        "category": "Nx",
        "title": "build (ui)",
        "command": "nx.build.ui"
      },
      {
        "category": "Nx",
        "title": "e2e (ui)",
        "command": "nx.e2e.ui"
      },
      {
        "category": "Nx",
        "title": "serve (ui)",
        "command": "nx.serve.ui"
      },
      {
        "category": "Nx",
        "title": "test (ui)",
        "command": "nx.test.ui"
      },
      {
        "category": "Nx",
        "title": "xi18n (ui)",
        "command": "nx.xi18n.ui"
      },
      {
        "category": "Nx",
        "title": "generate (ui)",
        "command": "nx.generate.ui"
      },
      {
        "category": "Nx",
        "title": "Nx generate...",
        "command": "nx.generate.ui.fileexplorer"
      },
      {
        "category": "Nx",
        "title": "Move Nx Project...",
        "command": "nx.move.fileexplorer"
      },
      {
        "category": "Nx",
        "title": "Remove Nx Project...",
        "command": "nx.remove.fileexplorer"
      },
      {
        "category": "Nx",
        "title": "Run Target from selected file",
        "command": "nx.run.fileexplorer"
      },
      {
        "category": "Nx",
        "title": "generate application",
        "command": "nx.generate.ui.app"
      },
      {
        "category": "Nx",
        "title": "generate library",
        "command": "nx.generate.ui.lib"
      },
      {
        "category": "Nx",
        "title": "Nx generate application",
        "command": "nx.generate.ui.app.fileexplorer"
      },
      {
        "category": "Nx",
        "title": "Nx generate library",
        "command": "nx.generate.ui.lib.fileexplorer"
      },
      {
        "category": "Nx",
        "title": "Make ng Faster with Nx",
        "command": "nxConsole.makeNgFaster"
      },
      {
        "title": "Add dependency to workspace",
        "command": "nxConsole.addDependency"
      },
      {
        "title": "Add dev dependency to workspace",
        "command": "nxConsole.addDevDependency"
      },
      {
        "title": "Connect to Nx Cloud",
        "command": "nxConsole.connectToNxCloud",
        "icon": "$(rocket)"
      }
    ],
    "configuration": {
      "title": "Nx Console",
      "properties": {
        "nxConsole.enableTelemetry": {
          "type": "boolean",
          "default": true,
          "description": "Help make Nx Console better by sending anonymous usage data to the Nx Console team."
        },
        "nxConsole.commonNxCommands": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "scope": "resource",
          "default": [
            "run-many",
            "affected",
            "affected:graph",
            "list",
            "migrate",
            "add-dependency",
            "add-dev-dependency"
          ],
          "markdownDescription": "Common Nx commands that will be available in the sidebar view. There are three categories of commands you can specify here: \n - Arbitrary Nx commands, like `build:example-app` or `nx run my-lib:test` (note that you can omit the prefixed `nx`) \n - Nx commands that are available through Nx Console, like `run-many`. They will be executed using the Nx Console UI. \n - `add-depedency` and `add-dev-dependency` commands will be executed using the Nx Console UI for adding dependencies to the workspace."
        },
        "nxConsole.enableGenerateFromContextMenu": {
          "type": "boolean",
          "default": true,
          "description": "Shows or hides Nx Generate ui option from the file explorer context menu."
        },
        "nxConsole.enableWorkspaceConfigCodeLens": {
          "type": "boolean",
          "default": true,
          "description": "Shows or hides CodeLens for running targets from the Nx workspace config file."
        },
        "nxConsole.enableLibraryImports": {
          "type": "boolean",
          "default": true,
          "description": "Configures a TypeScript language server plugin to include configured libraries in root files for TypeScript projects. This allows for importing libraries into other libraries even when the import was not there before."
        },
        "nxConsole.enableGeneratorFilters": {
          "type": "boolean",
          "default": true,
          "description": "Enables the filter for listed generators with Nx Console."
        },
        "nxConsole.projectViewingStyle": {
          "type": "string",
          "default": "automatic",
          "enum": [
            "list",
            "tree",
            "automatic"
          ],
          "enumDescriptions": [
            "Shows the projects in an ordered list.",
            "Shows the projects in the same folder structure as they are located in your repo.",
            "Shows the projects in a tree if there are more than 10, otherwise shows them in a list."
          ],
          "description": "Define how the 'Projects' view shows the entries."
        },
        "nxConsole.generatorAllowlist": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "description": "A list of generator names to show in the picker (can be combined with Generator Block List).\n\nThe name of the generator should be in this format: @package:generator.\n‎ ‎ ‎ ‎ ‎examples: @nrwl/workspace:library, workspace-generator:my-generator"
        },
        "nxConsole.generatorBlocklist": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "description": "A list of generator names to hide in the picker (can be combined with Generator Allow List).\n\nThe name of the generator should be in this format: @package:generator.\n‎ ‎ ‎ ‎ ‎  examples: @nrwl/workspace:library, workspace-generator:my-generator"
        },
        "nxConsole.enableTaskExecutionDryRunOnChange": {
          "type": "boolean",
          "default": true,
          "description": "Configures whether to do dry runs on change when using \"Generate\" command"
        }
      }
    },
    "problemMatchers": [
      {
        "name": "webpack-builder",
        "label": "TypeScript + Webpack Problem Matcher",
        "owner": "typescript",
        "source": "ts",
        "applyTo": "closedDocuments",
        "fileLocation": "absolute",
        "severity": "error",
        "pattern": [
          {
            "regexp": "\\[tsl\\] ERROR in (.*)?\\((\\d+),(\\d+)\\)",
            "file": 1,
            "line": 2,
            "column": 3
          },
          {
            "regexp": "\\s*TS\\d+:\\s*(.*)",
            "message": 1
          }
        ]
      }
    ],
    "taskDefinitions": [
      {
        "type": "ng",
        "required": [
          "project",
          "command"
        ],
        "properties": {
          "project": {
            "type": "string",
            "description": "The Angular CLI project to run a command on"
          },
          "command": {
            "type": "string",
            "description": "The Angular CLI command to run on the selected project"
          },
          "positional": {
            "type": "string",
            "description": "The project to run the command against"
          },
          "flags": {
            "type": "array",
            "description": "An array of flags to pass to the CLI"
          }
        }
      },
      {
        "type": "nx",
        "required": [
          "project",
          "command"
        ],
        "properties": {
          "project": {
            "type": "string",
            "description": "The NX CLI project to run a command on"
          },
          "command": {
            "type": "string",
            "description": "The NX CLI command to run on the selected project"
          },
          "positional": {
            "type": "string",
            "description": "The project to run the command against"
          },
          "flags": {
            "type": "array",
            "description": "An array of flags to pass to the CLI"
          }
        }
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "nx-console",
          "title": "Nx Console",
          "icon": "tree-view-icon.svg"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "nxConsole.views.welcome",
        "contents": "Nx Console - The UI for Nx"
      },
      {
        "view": "nxConsole.views.welcome",
        "contents": "[Getting Started](https://nx.dev/using-nx/console#nx-console-for-vscode)"
      }
    ],
    "walkthroughs": [
      {
        "id": "nxConsole",
        "title": "Getting Started with Nx Console",
        "description": "Interacting with your Nx Workspace",
        "steps": [
          {
            "id": "nxConsole.generate",
            "title": "Generate",
            "description": "Use Nx Console to scaffold different files with [Generate](command:nx.generate.ui)",
            "media": {
              "markdown": "getting-started/1-generate.md"
            }
          },
          {
            "id": "nxConsole.run",
            "title": "Run",
            "description": "[Run](command:nx.run) Nx commands with selected options",
            "media": {
              "markdown": "getting-started/2-run.md"
            }
          },
          {
            "id": "nxConsole.commonNxCommands",
            "title": "Common Nx Commands",
            "description": "Open the [graph](command:nx.graph), run a task for [affected](command:nx.affected) projects, or [run-many](command:nx.run-many) on selected projects",
            "media": {
              "markdown": "getting-started/3-common-nx-commands.md"
            }
          },
          {
            "id": "nxConsole.projects",
            "title": "Projects",
            "description": "See all the [projects](command:nxProjects.focus) in your workspace",
            "media": {
              "markdown": "getting-started/4-projects.md"
            }
          },
          {
            "id": "nxConsole.streamlining",
            "title": "Streamlining",
            "description": "[Rerun Last Task](command:workbench.action.tasks.reRunTask) or set up custom tasks and [keybindings](command:workbench.action.openGlobalKeybindings)",
            "media": {
              "markdown": "getting-started/5-streamlining.md"
            }
          }
        ]
      }
    ],
    "views": {
      "nx-console": [
        {
          "id": "nxConsole.views.welcome",
          "name": "Welcome",
          "when": "!isNxWorkspace && !isAngularWorkspace",
          "contextualTitle": "Nx Console Getting Started",
          "icon": "assets/nx-console.png",
          "visibility": "visible"
        },
        {
          "id": "nxProjects",
          "name": "Projects",
          "when": "isNxWorkspace || isAngularWorkspace"
        },
        {
          "id": "nxRunTarget",
          "name": "Generate & Run Target"
        },
        {
          "id": "nxCommands",
          "name": "Common Nx Commands",
          "when": "isNxWorkspace"
        },
        {
          "id": "nxHelpAndFeedback",
          "name": "Help and Feedback",
          "when": "isNxWorkspace"
        }
      ]
    },
    "jsonValidation": [
      {
        "fileMatch": "nx.json",
        "url": "./nx-schema.json"
      }
    ]
  }
}
